name: CI/CD

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push the Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            stefanfrijns/student-app:latest
            stefanfrijns/student-app:${{ github.sha }}

  scan:
    name: Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Docker Scout CVEs
        uses: docker/scout-action@v1.5.0
        with:
          command: cves
          image: stefanfrijns/student-app:${{ github.sha }}
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          exit-code: false


  test:
    name: Test
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Run container and smoke test
        run: |
          docker pull stefanfrijns/student-app:latest
          docker run -d -p 80:5000 --name app stefanfrijns/student-app:latest
          sleep 10
          curl -fsS http://localhost/health || curl -fsS http://localhost
      - name: Cleanup
        if: always()
        run: |
          docker ps -aq | xargs -r docker stop
          docker ps -aq | xargs -r docker rm

  deploy:
    name: Deploy
    needs: [test, scan]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4

      - name: Set kubeconfig
        run: echo "KUBECONFIG=/etc/rancher/k3s/k3s.yaml" >> $GITHUB_ENV
        # Of: echo "KUBECONFIG=/home/stefan/.kube/config" >> $GITHUB_ENV

      - name: Apply manifests
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/nginx-service.yaml

      - name: Update image to this commit
        run: |
          kubectl set image deployment/student-devsecops \
            quoterxp=stefanfrijns/student-app:${GITHUB_SHA} --record || true

      - name: Wait for rollout
        run: kubectl rollout status deployment/student-devsecops --timeout=180s

  automated-api-tests:
    name: API tests (Postman CLI)
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh

      - name: Login to Postman CLI
        env:
          POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
        run: postman login --with-api-key "$POSTMAN_API_KEY"

      - name: Run API tests
        env:
          # Optioneel: als je in de collection {{baseUrl}} gebruikt en die
          # wil overriden vanuit GitHub Secrets, zet 'm hier:
          # APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
          :
        run: |
          # Runnen tegen je collectie in de repo; vervang pad/naam indien anders.
          # De -e waarde hieronder is jouw Postman Environment UID.
          postman collection run "${{ github.workspace }}/postman/collections/New Collection.json" \
            -e "38786624-e9785fe8-bf95-4d29-85eb-00210da734cd"
          # Voor override van een variabele kan je toevoegen:
          #   --env-var baseUrl="$APP_BASE_URL"